service: wildrydes-serverless

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: dev
  tracing:
    apiGateway: true
    lambda: true
  environment:
    dynamoTableName: ${self:service}-${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: !GetAtt DynamoTable.Arn
    - Effect: Allow
      Action:
        - codedeploy:*
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - codepipeline:PutJobSuccessResult
        - codepipeline:PutJobFailureResult
      Resource:
        - "*"


plugins:
  - serverless-finch
  - serverless-plugin-aws-alerts
  - serverless-plugin-canary-deployments

custom:
  client:
    bucketName: ${self:service}-${self:provider.stage}-eloy-vega-castillo
    distributionFolder: website
  alerts:
    dashboards: true
    alarms:
      - functionThrottles
      - functionErrors
      - functionInvocations
      - functionDuration
  
    
functions:
  RequestUnicorn:
    handler: lambda_function/requestUnicorn.handler
    
    events:
      - http:
          path: ride
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:497402068457:userpool/us-east-1_NIH4DWf86
    # deploymentSettings:
    #   type: Linear10PercentEvery1Minute
    #   alias: Live
  cleanDynamo:
    handler: lambda_function/cleanDynamo.handler


package:
  exclude:
    - website/**



resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:provider.stage}
        AutoVerifiedAttributes:
          - email
        Schema:
          - Name: email
            Mutable: false
            Required: true
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: WildRydesWebApp
        UserPoolId:
          Ref: CognitoUserPool
        GenerateSecret: false
    DynamoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"
        AttributeDefinitions:
          - AttributeName: "RideId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "RideId"
            KeyType: "HASH"
  Outputs:
    UserPoolId:
      Value:
        Ref: CognitoUserPool
    UserPoolArn:
      Value: !GetAtt CognitoUserPool.Arn
    UserPoolClientId:
      Value:
        Ref: CognitoUserPoolClient